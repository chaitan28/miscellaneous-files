/////////////////////////////////////////////////////////////
# Azure virtual machine 
#!/bin/bash
yes | sudo apt update
yes | sudo apt install apache2
echo "<h1>Server Details</h1>" | sudo tee /var/www/html/index.html
echo "<p><strong>Hostname:</strong> $(hostname)</p>" | sudo tee -a /var/www/html/index.html
echo "<p><strong>Private IP:</strong> $(hostname -I | cut -d' ' -f1)</p>" | sudo tee -a /var/www/html/index.html
echo "<p><strong>Public IP:</strong> $(curl -s ifconfig.me)</p>" | sudo tee -a /var/www/html/index.html
echo "<p><strong>OS Version:</strong> $(lsb_release -d | cut -f2)</p>" | sudo tee -a /var/www/html/index.html
echo "<p><strong>Uptime:</strong> $(uptime -p)</p>" | sudo tee -a /var/www/html/index.html

sudo systemctl restart apache2

////////////////////////////////////////////////////////////
#!/bin/bash

yes | sudo apt update
yes | sudo apt install apache2

echo "<h1>server details</h1><p><strong>Hostname:</strong> $(hostname)</p><p><strong>IP Address:</strong> $(hostname -I | cut -d' ' -f1)</p>" > /var/www/html/index.html

sudo systemctl restart apache2

/////////////////////////////////////////////////////////////////
#!/bin/bash
sudo apt update -y
sudo apt install nginx -y
sudo systemctl start nginx
sudo systemctl enable nginx
sudo chmod 644 /var/www/html/index.nginx-debian.html
TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") 
INSTANCE_ID=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/instance-id") 
AVAILABILITY_ZONE=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/placement/availability-zone") 
PUBLIC_IP=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/public-ipv4")  
sudo bash -c "cat > /var/www/html/index.nginx-debian.html <<EOF 
<h1>Instance Details</h1> 
<p><b>Instance ID:</b> $INSTANCE_ID</p> 
<p><b>Availability Zone:</b> $AVAILABILITY_ZONE</p> 
<p><b>Public IP:</b> $PUBLIC_IP</p> 
EOF" 
sudo systemctl reload nginx
sudo systemctl restart nginx 
///////////////////////////////////////////////////////////////////////////////////////////////////////////
#!/bin/bash
sudo apt update && sudo apt upgrade -y
sudo apt install mysql-server -y
sudo systemctl start mysql
sudo systemctl enable mysql
sudo systemctl status mysql
sudo ss -tap | grep mysql

/////////////////////////////////////////////////////////////////////////////////////////////
#!/bin/bash
#Installation of nginx service
sudo yum update -y
sudo amazon-linux-extras enable nginx1
sudo yum install nginx -y
sudo systemctl start nginx
sudo systemctl enable nginx
sudo yum install git -y
///////////////////////////////////////////////////////////////////////////////
#!/bin/bash
#enable the ports
sudo yum update -y
sudo yum install firewalld -y
sudo systemctl enable firewalld
sudo systemctl start firewalld
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-service=http
sudo firewall-cmd --reload
/////////////////////////////////////////////////////////////////////////////////////
#!/bin/bash
#check the service
sudo systemctl status nginx
sudo systemctl status firewalld
sudo firewall-cmd --list-ports
nginx -v
git --version

sudo chmod 644 /usr/share/nginx/html/index.html

TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600") 

INSTANCE_ID=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/instance-id") 
AVAILABILITY_ZONE=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/placement/availability-zone") 
PUBLIC_IP=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" "http://169.254.169.254/latest/meta-data/public-ipv4") 


# Create a simple HTML page displaying instance details 
sudo bash -c "cat > /usr/share/nginx/html/index.html <<EOF 
<h1>Instance Details</h1> 
<p><b>Instance ID:</b> $INSTANCE_ID</p> 
<p><b>Availability Zone:</b> $AVAILABILITY_ZONE</p> 
<p><b>Public IP:</b> $PUBLIC_IP</p> 
EOF" 

sudo systemctl restart nginx 
sudo yum update -y
sudo yum install epel-release -y
sudo yum install stress-ng -y


sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

///////////////////////////////////////////////////////

https://www.sihub.in/managesi/rblcredit#
/////////////////////////////////////////////////////////////////////////////////////
#!/bin/bash

set -e

# Update system
sudo apt-get update -y
sudo apt-get upgrade -y

# Install Java
sudo apt install openjdk-21-jdk -y

# Define variables
TOMCAT_VERSION="9.0.105"
TOMCAT_DIR="/opt/tomcat"

# Download and install Tomcat
cd /opt
sudo wget https://downloads.apache.org/tomcat/tomcat-9/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz
sudo tar -xvzf apache-tomcat-${TOMCAT_VERSION}.tar.gz
sudo mv apache-tomcat-${TOMCAT_VERSION} ${TOMCAT_DIR}
sudo rm -f apache-tomcat-${TOMCAT_VERSION}.tar.gz
sudo chmod -R 755 ${TOMCAT_DIR}

# Create systemd service
sudo tee /etc/systemd/system/tomcat.service > /dev/null <<EOF
[Unit]
Description=Apache Tomcat Web Application Container
After=network.target

[Service]
Type=oneshot

Environment=JAVA_HOME=/usr/lib/jvm/java-1.21.0-openjdk-amd64        #make sure this is correct
Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat
Environment=CATALINA_BASE=/opt/tomcat
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'
ExecStart=/opt/tomcat/bin/startup.sh
ExecStop=/opt/tomcat/bin/shutdown.sh

User=root
Group=root
UMask=0007
RestartSec=10
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF

# Reload systemd and start Tomcat
sudo systemctl daemon-reload
sudo systemctl enable tomcat
sudo systemctl start tomcat

# Log status
sudo systemctl status tomcat